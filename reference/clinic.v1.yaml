openapi: 3.0.0
info:
  title: Clinics API
  version: '1.0'
  description: 'Web service that stores information about clinics, clinicians and their patients'
  contact:
    name: Tidepool
    url: 'https://www.tidepool.org'
    email: support@tidepool.org
  license:
    name: BSD-2-Clause
    url: 'https://github.com/tidepool-org/clinic/blob/master/LICENSE'
  x-tidepool-service: 'https://github.com/tidepool-org/clinic/'
servers:
  - url: 'https://external.integration.tidepool.org'
    description: integration
  - url: 'https://api.tidepool.org'
    description: production
  - url: 'https://dev1.dev.tidepool.org'
    description: dev1
  - url: 'https://qa1.development.tidepool.org'
    description: qa1
  - url: 'https://qa2.development.tidepool.org'
    description: qa2
paths:
  /v1/clinics:
    get:
      summary: List Clinics
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinics'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: ListClinics
      description: Retrieve the list of clinics
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/shareCode'
        - $ref: '#/components/parameters/createdTimeStart'
        - $ref: '#/components/parameters/createdTimeEnd'
      x-roles:
        - TIDEPOOL_ADMIN
        - CLINIC_ADMIN
        - CLINIC_CLINICIAN
    parameters: []
    post:
      summary: Create Clinic
      operationId: CreateClinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinic'
      description: Create a new clinic
      x-roles: []
      tags:
        - Clinics
      parameters: []
  '/v1/clinics/share_code/{shareCode}':
    parameters:
      - schema:
          type: string
          minLength: 1
        name: shareCode
        in: path
        required: true
    get:
      summary: Get Clinic by Share Code
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./clinic/models/clinic.v1.yaml
      operationId: GetClinicByShareCode
      description: Retrieve a clinic object with a share code
  '/v1/clinics/{clinicId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      summary: Get Clinic
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
          links:
            get-clinicians:
              operationId: get-clinics-clinicid-clinicians
              parameters:
                clinicid: $request.query.clinicid
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: GetClinic
      description: Retrieve a clinic by id
      x-roles:
        - TIDEPOOL_ADMIN
        - CLINIC_ADMIN
        - CLINIC_CLINICIAN
      parameters: []
    put:
      summary: Update Clinic
      operationId: UpdateClinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: Update an existing clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinic'
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      security:
        - sessionToken: []
      x-roles:
        - TIDEPOOL_ADMIN
        - CLINIC_ADMIN
      tags:
        - Clinics
    delete:
      summary: Delete Clinic
      operationId: DeleteClinic
      responses:
        '204':
          description: No Content
      description: Deletes a clinic if there are no connected patient accounts (besides demo accounts).
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/clinicians':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      summary: List Clinicians
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinicians'
      operationId: ListClinicians
      description: 'Retrieve the list of clinic members. '
      parameters:
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/email'
        - $ref: '#/components/parameters/role'
    post:
      summary: Create Clinician
      operationId: CreateClinician
      responses:
        '200':
          description: OK
      description: Internal endpoint to create a new clinician
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinician'
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/patients':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      summary: List Patients
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientsResponse'
      operationId: ListPatients
      parameters:
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - schema:
            type: string
            pattern: ^(>=|>|<=|<)\d\.\d\d?$
            example: '>=0.5'
          in: query
          name: summary.periods.14d.timeCGMUsePercent
          description: Percentage of time of CGM use
        - schema:
            type: string
            pattern: ^(>=|>|<=|<)\d\.\d\d?$
            example: '>=0.7'
          in: query
          name: summary.periods.14d.timeInVeryLowPercent
          description: Percentage of time below 54 mg/dL
        - schema:
            type: string
            pattern: ^(>=|>|<=|<)\d\.\d\d?$
            example: '>=0.7'
          in: query
          name: summary.periods.14d.timeInLowPercent
          description: Percentage of time in range 54-70 mg/dL
        - schema:
            type: string
            pattern: ^(>=|>|<=|<)\d\.\d\d?$
            example: '>=0.7'
          in: query
          name: summary.periods.14d.timeInTargetPercent
          description: Percentage of time in range 70-180 mg/dL
        - schema:
            type: string
            pattern: ^(>=|>|<=|<)\d\.\d\d?$
            example: '>=0.7'
          in: query
          name: summary.periods.14d.timeInHighPercent
          description: Percentage of time in range 180-250 mg/dL
        - schema:
            type: string
            pattern: ^(>=|>|<=|<)\d\.\d\d?$
            example: '>=0.7'
          in: query
          name: summary.periods.14d.timeInVeryHighPercent
          description: Percentage of time above range 250 mg/dL
        - schema:
            type: string
            format: date-time
          in: query
          name: summary.lastUploadDateFrom
          description: Inclusive
        - schema:
            type: string
            format: date-time
          in: query
          name: summary.lastUploadDateTo
          description: Exclusive
        - schema:
            type: array
            items:
              type: string
              format: '^[a-f0-9]{24}$'
          in: query
          name: tags
          description: Comma-separated list of patient tag IDs
          style: form
          explode: false
      description: Retrieve a list of patients of a clinic
    post:
      summary: Create Patient Account
      operationId: CreatePatientAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Create a custodial account for a patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/patient_tags':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    post:
      summary: Create Patient Tag
      operationId: CreatePatientTag
      responses:
        '200':
          description: OK
      description: Create a new patient tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientTag'
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/clinicians/{clinicianId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/clinicianId'
    get:
      summary: Get Clinician
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      operationId: GetClinician
      description: Retrieve a member of clinic given their user id
    put:
      summary: Update Clinician
      operationId: UpdateClinician
      responses:
        '200':
          description: OK
      description: Update existing clinician
      tags:
        - Clinics
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./clinic/models/clinician.v1.yaml
    delete:
      summary: Delete Clinician
      operationId: DeleteClinician
      responses:
        '200':
          description: OK
      description: Removes a clinician from a clinic
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/patients/{patientId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientId'
    get:
      summary: Get Patient
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      operationId: GetPatient
      description: Retrieve a patient of clinic given their user id
    post:
      summary: Create Patient from Existing User
      operationId: CreatePatientFromUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Internal endpoint for creating a patient from an existing user
      tags:
        - Clinics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatient'
    put:
      summary: Update Patient
      operationId: UpdatePatient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Update existing patient of a clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      tags:
        - Clinics
    delete:
      summary: Delete Patient
      operationId: DeletePatient
      responses:
        '204':
          description: No Content
      description: Deletes patient from a clinic. Requires the request to be made by a clinic admin or the currently authenticated user id to match the patient id.
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/patient_tags/{patientTagId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientTagId'
    put:
      summary: Update Patient Tag
      operationId: UpdatePatientTag
      responses:
        '200':
          description: OK
      description: Update existing patient tag
      tags:
        - Clinics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientTag'
    delete:
      summary: Delete Patient Tag
      operationId: DeletePatientTag
      responses:
        '200':
          description: OK
      description: Removes a patient tag from a clinic and tagged patients
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/invites/clinicians':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    post:
      summary: Invite Clinician
      operationId: InviteClinician
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./clinic/models/clinician.v1.yaml
      description: Send an invite to clinician's email address to join a clinic.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteClinician'
      tags:
        - Clinics
        - Confirmations
  '/v1/clinics/{clinicId}/invites/clinicians/{inviteId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/inviteId'
    patch:
      summary: ''
      operationId: ResendInvite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./confirm/models/confirmation.v1.yaml
      description: Resend invite to the email address of the clinician.
      tags:
        - Clinics
        - Confirmations
    delete:
      summary: Delete Invite
      operationId: DeleteInvite
      responses:
        '200':
          description: OK
      description: Deletes unaccepted invite
      tags:
        - Clinics
        - Confirmations
    get:
      summary: Get Clinician Invite
      operationId: GetClinicianInvite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./confirm/models/confirmation.v1.yaml
      description: Retrieve an invitation sent to clinician to join the clinic
      tags:
        - Confirmations
  '/v1/clinics/{clinicId}/invites/clinicians/{inviteId}/clinician':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/inviteId'
    patch:
      summary: Associate Clinician to User
      operationId: AssociateClinicianToUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      description: Internal endpoint to associate a clinician to a user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateClinicianToUser'
      tags:
        - Clinics
    delete:
      summary: Delete Invited Clinician
      operationId: DeleteInvitedClinician
      responses:
        '200':
          description: OK
      description: Internal endpoint to delete an invited clinician object
      tags:
        - Clinics
    get:
      summary: Get Invited Clinician
      operationId: GetInvitedClinician
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      description: Internal endpoint to retrieve invited clinician.
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/invites/patients':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      summary: Get Patient Invites
      tags:
        - Clinics
        - Confirmations
      responses:
        '200':
          description: OK
      operationId: GetPatientInvites
      description: Retrieve the list of all pending invites from users who would like to share their accounts with the clinic and become patients.
  '/v1/clinics/{clinicId}/invites/patients/{inviteId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/inviteId'
    put:
      summary: Accept Patient Invitation
      operationId: AcceptPatientInvitation
      responses:
        '200':
          description: OK
      description: Accept a pending invite from a user who would like to share their account with the clinic and become a patient.
      tags:
        - Clinics
        - Confirmations
  '/v1/clinics/{clinicId}/patients/{patientId}/permissions':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientId'
    put:
      summary: Update Patient Permissions
      operationId: UpdatePatientPermissions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientPermissions'
      description: |-
        Update permissions that a clinic has over a patient account. If all permissions are revoked as a result of the update, the patient profile will be removed from the clinic.

        Only patients can change the permissions.
      tags:
        - Clinics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientPermissions'
      parameters: []
  '/v1/clinics/{clinicId}/patients/{patientId}/permissions/{permission}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientId'
      - schema:
          type: string
          enum:
            - custodian
            - view
            - upload
            - note
        name: permission
        in: path
        required: true
    delete:
      summary: Delete Patient Permission
      operationId: DeletePatientPermission
      description: |-
        Remove a single permission that a clinic has over a patient account. If all permissions are revoked as a result of the update, the patient profile will be removed from the clinic.

        Only patients can change the permissions.
      tags:
        - Clinics
      parameters: []
      responses:
        '204':
          description: No Content
  '/v1/patients/{userId}/clinics':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: List Clinics for Patient
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientClinicRelationships'
      operationId: ListClinicsForPatient
      description: Get all clinics a user is a patient of
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
  '/v1/clinicians/{userId}/invites':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: List Clinician Invites
      tags:
        - Clinics
        - Confirmations
      responses:
        '200':
          description: OK
      operationId: ListClinicianInvites
      description: Retrieve a list of the outstanding invites to join a clinic
  '/v1/clinicians/{userId}/invites/{inviteId}':
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/inviteId'
    delete:
      summary: Dismiss Clinician Invite
      operationId: DismissClinicianInvite
      responses:
        '200':
          description: OK
      tags:
        - Clinics
        - Confirmations
      description: Dismisses an invite sent from a clinic to clinician
    put:
      summary: Accept Clinician Invite
      operationId: AcceptClinicianInvite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      description: Accept an invite to join a clinic as clinician. The clinician will be associated to the currently authenticated user if the email in their profile matches the email of the invite.
      tags:
        - Clinics
        - Confirmations
  '/v1/clinicians/{userId}/clinics':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: List Clinics for Clinician
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClinicianClinicRelationships'
      operationId: ListClinicsForClinician
      description: Returns a list of all clinics a clinician is a member of
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
  '/v1/clinics/{clinicId}/migrations':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    post:
      summary: Migrate Legacy Clinician Patients
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
      operationId: MigrateLegacyClinicianPatients
      tags:
        - Clinics
        - Internal
      description: 'Migrate the patients of a legacy clinic account. '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Migration'
    get:
      summary: Retrieve Migration Status
      operationId: ListMigrations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migrations'
      description: ListMigrations
      tags:
        - Clinics
        - Internal
  '/v1/clinicians/{userId}/migrate':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    post:
      summary: Enable Clinics
      tags:
        - Clinics
        - Internal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./clinic/models/clinic.v1.yaml
      operationId: EnableNewClinicExperience
      description: Internal only endpoint to enable new clinic experience for a legacy clinician account. Patients won't be migrated until the clinic details are populated and migration is explicitly kicked-off by blip.
  '/v1/clinics/{clinicId}/migrate':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    post:
      summary: Trigger initial migration
      tags:
        - Clinics
        - Internal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
      operationId: TriggerInitialMigration
      description: Trigger the initial migration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerMigration'
  '/v1/clinics/{clinicId}/migrations/{userId}':
    parameters:
      - $ref: ./clinic/parameters/clinicid.v1.yaml
      - $ref: '#/components/parameters/userId'
    get:
      summary: Get Migration
      tags:
        - Clinics
        - Internal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
      operationId: GetMigration
      description: Get a migration by user id
    patch:
      summary: Update Migration
      operationId: UpdateMigration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationUpdate'
      description: Internal endpoint to update the status of a migration
      tags:
        - Clinics
        - Internal
  '/v1/users/{userId}/clinics':
    parameters:
      - $ref: '#/components/parameters/userId'
    delete:
      summary: ''
      operationId: DeleteUserFromClinics
      responses:
        '200':
          description: OK
      tags:
        - Clinics
        - Internal
      description: |-
        Internal endpoint that deletes any user associations with clinics they are a patient or a member of.

        If the user is a patient of a clinic the service will delete the patient-clinic relationship.

        If the user is one of many admins of any clinic the service will delete the clinician-clinic relationship.

        If the user is the only admin of a clinic the service will:
        - delete the clinician record, leaving the clinic without an admin
        - delete all non-custodial patient relationships of the clinic
        - keep all custodian relationships, allowing users to claim custodial accounts with an email
        - keep all custodian accounts and data even if they can’t be claimed when there isn’t an email address associated with the account
    post:
      summary: Update User Details
      operationId: UpdateClinicUserDetails
      responses:
        '204':
          description: No Content
      description: Internal endpoint to update clinician details. In the future it may be extended to support patient updates.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDetails'
      tags:
        - Clinics
        - Internal
  /v1/clinicians:
    get:
      summary: List All Clinicians
      tags:
        - Clinics
        - Internal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClinicianClinicRelationship'
      operationId: ListAllClinicians
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/createdTimeStart'
        - $ref: '#/components/parameters/createdTimeEnd'
      description: Returns list of all clinician/clinic relationships in the system. Internal endpoint used for reporting purposes.
  '/v1/patients/{patientId}/summary':
    parameters:
      - $ref: '#/components/parameters/patientId'
    post:
      summary: UpdatePatientSummary
      operationId: UpdatePatientSummary
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      description: Internal endpoint which updates the summary in all patient records which match the user id.
      tags:
        - Clinics
        - Internal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientSummary'
            examples:
              example-1:
                value:
                  lastUpdatedDate: '2019-08-24T14:15:22Z'
                  firstData: '2019-08-24T14:15:22Z'
                  lastData: '2019-08-24T14:15:22Z'
                  lastUploadDate: '2019-08-24T14:15:22Z'
                  outdatedSince: '2019-08-24T14:15:22Z'
                  averageGlucose:
                    units: mmol/l
                    value: 105
                  glucoseManagementIndicator: 0.06
                  percentTimeInTarget: 0.7
                  percentTimeInHigh: 0.1
                  percentTimeInVeryHigh: 0.1
                  percentTimeInLow: 0.05
                  percentTimeInVeryLow: 0.05
                  percentTimeCGMUse: 0.9
                  highGlucoseThreshold: 0
                  lowGlucoseThreshold: 0
        description: ''
  '/v1/patients/{userId}/data_sources':
    parameters:
      - $ref: '#/components/parameters/userId'
    put:
      summary: Create or update a data source for a patient
      operationId: UpdatePatientDataSources
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      description: Internal endpoint to upsert patient data source provider details in all their associated clinic records.
      tags:
        - Clinics
        - Internal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSources'
  '/v1/clinics/{clinicId}/tier':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    post:
      summary: Update Tier
      operationId: UpdateTier
      responses:
        '200':
          description: OK
      description: Internal endpoint to update clinic service tier
      tags:
        - Clinics
        - Internal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTier'
  '/v1/clinics/{clinicId}/patients/{patientId}/upload_reminder':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientId'
    post:
      summary: Send Upload Reminder
      operationId: SendUploadReminder
      responses:
        '200':
          description: OK
      description: Sends upload reminder to the patient
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/patients/{patientId}/send_dexcom_connect_request':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientId'
    post:
      summary: Resend Dexcom connect request email
      operationId: SendDexcomConnectRequest
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Resend Dexcom connect request to the email address of the patient
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/patients/delete_tag/{patientTagId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientTagId'
    delete:
      summary: Delete Patient Tag From Clinic Patients
      operationId: DeletePatientTagFromClinicPatients
      responses:
        '200':
          description: OK
      description: Delete a patient tag from all clinic patients
      tags:
        - Clinics
        - Internal
components:
  schemas:
    Error:
      $ref: ./common/models/error.v1.yaml
    Clinic:
      $ref: ./clinic/models/clinic.v1.yaml
    Clinics:
      type: array
      items:
        $ref: '#/components/schemas/Clinic'
    Clinician:
      $ref: ./clinic/models/clinician.v1.yaml
    Clinicians:
      type: array
      items:
        $ref: '#/components/schemas/Clinician'
    Patient:
      $ref: ./clinic/models/patient.v1.yaml
    Patients:
      type: array
      items:
        $ref: ./clinic/models/patient.v1.yaml
    PatientTag:
      $ref: ./clinic/models/patienttag.v1.yaml
    PatientTags:
      type: array
      items:
        $ref: '#/components/schemas/PatientTag'
    DateTime:
      $ref: ./common/models/datetime.v1.yaml
    DataSource:
      $ref: ./clinic/models/datasource.v1.yaml
    DataSources:
      type: array
      items:
        $ref: '#/components/schemas/DataSource'
    InviteClinician:
      $ref: ./clinic/models/inviteclinician.v1.yaml
    TidepoolUserId:
      $ref: ./common/models/tidepooluserid.yaml
    ClinicianRoles:
      $ref: ./clinic/models/clinicianroles.v1.yaml
    PhoneNumber:
      $ref: ./clinic/models/phonenumber.v1.yaml
    PatientPermissions:
      $ref: ./clinic/models/patientpermissions.v1.yaml
    Id:
      $ref: ./clinic/models/clinicid.v1.yaml
    PatientClinicRelationship:
      title: PatientClinicRelationship
      type: object
      properties:
        patient:
          $ref: '#/components/schemas/Patient'
        clinic:
          $ref: '#/components/schemas/Clinic'
      required:
        - patient
        - clinic
    PatientClinicRelationships:
      title: PatientClinicRelationships
      type: array
      items:
        $ref: '#/components/schemas/PatientClinicRelationship'
    CreatePatient:
      title: Create Patient
      type: object
      properties:
        permissions:
          $ref: ./clinic/models/patientpermissions.v1.yaml
        isMigrated:
          type: boolean
        legacyClinicianId:
          $ref: '#/components/schemas/TidepoolUserId'
        attestationSubmitted:
          type: boolean
    AssociateClinicianToUser:
      title: Associate Clinician
      type: object
      properties:
        userId:
          type: string
      required:
        - userId
    ClinicianClinicRelationship:
      title: ClinicianClinicRelationship
      type: object
      properties:
        clinician:
          $ref: '#/components/schemas/Clinician'
        clinic:
          $ref: '#/components/schemas/Clinic'
      required:
        - clinician
        - clinic
    ClinicianClinicRelationships:
      title: ClinicianClinicRelationships
      type: array
      items:
        $ref: '#/components/schemas/ClinicianClinicRelationship'
    Migration:
      title: Migration
      type: object
      properties:
        userId:
          type: string
          description: The user id of the legacy clinician account that needs to be migrated.
          minLength: 1
        status:
          $ref: ./clinic/models/migrationstatus.v1.yaml
        createdTime:
          type: string
          format: date-time
          readOnly: true
        updatedTime:
          type: string
          format: date-time
          readOnly: true
        attestationTime:
          type: string
          format: date-time
          readOnly: true
      required:
        - userId
        - createdTime
        - updatedTime
    Migrations:
      title: Migrations
      type: array
      items:
        $ref: '#/components/schemas/Migration'
    MigrationUpdate:
      title: MigrationUpdate
      type: object
      properties:
        status:
          $ref: ./clinic/models/migrationstatus.v1.yaml
      required:
        - status
    MigrationStatus:
      $ref: ./clinic/models/migrationstatus.v1.yaml
    Meta:
      title: Meta
      type: object
      properties:
        count:
          type: integer
    PatientsResponse:
      title: PatientsResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Patients'
        meta:
          $ref: '#/components/schemas/Meta'
    UpdateUserDetails:
      title: UpdateUserDetails
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
    TriggerMigration:
      title: TriggerMigration
      type: object
      properties:
        attestationSubmitted:
          type: boolean
    PatientSummary:
      $ref: ./clinic/models/patientsummary.v1.yaml
    PatientSummaryPeriods:
      $ref: ./clinic/models/patientsummaryperiods.v1.yaml
    PatientSummaryPeriod:
      $ref: ./clinic/models/patientsummaryperiod.v1.yaml
    AverageGlucose:
      $ref: ./data/models/blood/glucose/glucosemmol.v1.yaml
    UpdateTier:
      title: UpdateTier
      type: object
      properties:
        tier:
          $ref: '#/components/schemas/Tier'
      required:
        - tier
    Tier:
      $ref: ./clinic/models/tier.v1.yaml
  securitySchemes:
    sessionToken:
      name: x-tidepool-session-token
      type: apiKey
      in: header
      description: A Tidepool session token
  parameters:
    offset:
      name: offset
      in: query
      schema:
        type: integer
        minimum: 0
    limit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        default: 10
    clinicId:
      name: clinicId
      in: path
      required: true
      schema:
        type: string
        pattern: '^[a-f0-9]{24}$'
    clinicianId:
      name: clinicianId
      in: path
      required: true
      schema:
        type: string
        pattern: '^([0-9a-f]{10}|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$'
    patientId:
      name: patientId
      in: path
      required: true
      schema:
        type: string
        pattern: '^([0-9a-f]{10}|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$'
    patientTagId:
      name: patientTagId
      in: path
      required: true
      schema:
        type: string
        pattern: '^[a-f0-9]{24}$'
    userId:
      name: userId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/TidepoolUserId'
    inviteId:
      name: inviteId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
    shareCode:
      name: shareCode
      in: query
      required: false
      schema:
        type: string
    search:
      name: search
      in: query
      required: false
      schema:
        type: string
      description: Full text search query
    email:
      name: email
      in: query
      required: false
      schema:
        type: string
        format: email
    role:
      name: role
      in: query
      required: false
      schema:
        type: string
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
        pattern: '(?:-|\+)(?:[a-zA-Z]|_)+'
      description: Sort order and attribute (e.g. +name or -name)
    createdTimeStart:
      name: createdTimeStart
      in: query
      required: false
      schema:
        type: string
        format: date-time
      description: Return records created after the given date (inclusive)
    createdTimeEnd:
      name: createdTimeEnd
      in: query
      required: false
      schema:
        type: string
        format: date-time
      description: Return records created before the given date (exclusive)
tags:
  - name: Internal
    description: APIs intended for internal use by Tidepool.
  - name: Clinics
    description: 'Manage clinics, clinians and patients.'
  - name: Confirmations
    description: 'Manage confirmations for account creation, sharing invites, etc.'
security:
  - sessionToken: []
