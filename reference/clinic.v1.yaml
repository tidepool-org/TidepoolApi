openapi: 3.0.0
info:
  title: Clinics API
  version: '1.0'
  description: 'Web service that stores information about clinics, clinicians and their patients'
  contact:
    name: Tidepool
    url: 'https://www.tidepool.org'
    email: support@tidepool.org
  license:
    name: BSD-2-Clause
    url: 'https://github.com/tidepool-org/clinic/blob/master/LICENSE'
  x-tidepool-service: 'https://github.com/tidepool-org/clinic/'
servers:
  - url: 'https://external.integration.tidepool.org'
    description: integration
  - url: 'https://api.tidepool.org'
    description: production
  - url: 'https://dev1.dev.tidepool.org'
    description: dev1
  - url: 'https://qa1.development.tidepool.org'
    description: qa1
  - url: 'https://qa2.development.tidepool.org'
    description: qa2
paths:
  /v1/clinics:
    get:
      summary: List Clinics
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinics'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: ListClinics
      description: Retrieve the list of clinics
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/shareCode'
        - $ref: '#/components/parameters/createdTimeStart'
        - $ref: '#/components/parameters/createdTimeEnd'
        - $ref: '#/components/parameters/ehrEnabled'
      x-roles:
        - TIDEPOOL_ADMIN
        - CLINIC_ADMIN
        - CLINIC_CLINICIAN
    parameters: []
    post:
      summary: Create Clinic
      operationId: CreateClinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinic'
      description: Create a new clinic
      x-roles: []
      tags:
        - Clinics
      parameters: []
  '/v1/clinics/share_code/{shareCode}':
    parameters:
      - schema:
          type: string
          minLength: 1
        name: shareCode
        in: path
        required: true
    get:
      summary: Get Clinic by Share Code
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./clinic/models/clinic.v1.yaml
      operationId: GetClinicByShareCode
      description: Retrieve a clinic object with a share code
  '/v1/clinics/{clinicId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      summary: Get Clinic
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
          links:
            get-clinicians:
              operationId: get-clinics-clinicid-clinicians
              parameters:
                clinicid: $request.query.clinicid
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: GetClinic
      description: Retrieve a clinic by id
      x-roles:
        - TIDEPOOL_ADMIN
        - CLINIC_ADMIN
        - CLINIC_CLINICIAN
      parameters: []
    put:
      summary: Update Clinic
      operationId: UpdateClinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: Update an existing clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinic'
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      security:
        - sessionToken: []
      x-roles:
        - TIDEPOOL_ADMIN
        - CLINIC_ADMIN
      tags:
        - Clinics
    delete:
      summary: Delete Clinic
      operationId: DeleteClinic
      responses:
        '204':
          description: No Content
      description: Deletes a clinic if there are no connected patient accounts (besides demo accounts).
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/clinicians':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      summary: List Clinicians
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinicians'
      operationId: ListClinicians
      description: 'Retrieve the list of clinic members. '
      parameters:
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/email'
        - $ref: '#/components/parameters/role'
    post:
      summary: Create Clinician
      operationId: CreateClinician
      responses:
        '200':
          description: OK
      description: Internal endpoint to create a new clinician
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinician'
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/tide_report':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      summary: View TIDE Report
      description: Retrieve a report of patients with tags by TIDE categories
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TideResponse'
      operationId: TideReport
      parameters:
        - schema:
            type: string
            pattern: ^(1d|7d|14d|30d)$
            example: 7d
          in: query
          name: period
          description: Time Period to display
        - schema:
            type: array
            items:
              type: string
              format: '^[a-f0-9]{24}$'
          in: query
          name: tags
          description: Comma-separated list of patient tag IDs
          style: form
          explode: false
        - schema:
            type: string
            format: date-time
          in: query
          name: cgm.lastDataFrom
          description: Inclusive
        - schema:
            type: string
            format: date-time
          in: query
          name: cgm.lastDataTo
          description: Exclusive
  '/v1/clinics/{clinicId}/patients':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      summary: List Patients
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientsResponse'
      operationId: ListPatients
      parameters:
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - schema:
            type: string
            pattern: ^(cgm|bgm)$
            example: cgm
          in: query
          name: sortType
          description: Summary type to sort by
        - schema:
            type: string
            pattern: ^(1d|7d|14d|30d)$
            example: 7d
          in: query
          name: period
          description: 'Time Period to display, filter, and sort'
        - schema:
            type: boolean
          in: query
          name: offsetPeriods
          required: false
          description: 'If we should display, filter, and sort based on the offset periods or default periods'
        - schema:
            type: string
            format: date-time
          in: query
          name: lastReviewed
          description: Inclusive
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.averageGlucoseMmol
          description: Average glucose value of records in Mmol/L
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.glucoseManagementIndicator
          description: Glucose management Indicator of records
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeCGMUsePercent
          description: Percentage of time [0.0-1.0]  of CGM use
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInVeryLowPercent
          description: Percentage of time [0.0-1.0]  below 54 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInAnyLowPercent
          description: Percentage of time [0.0-1.0]  below 70 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInLowPercent
          description: Percentage of time [0.0-1.0]  in range 54-70 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInTargetPercent
          description: Percentage of time [0.0-1.0]  in range 70-180 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInHighPercent
          description: Percentage of time [0.0-1.0]  in range 180-250 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInVeryHighPercent
          description: Percentage of time [0.0-1.0]  above 250 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInExtremeHighPercent
          description: Percentage of time [0.0-1.0]  above 350 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInAnyHighPercent
          description: Percentage of time [0.0-1.0]  above 180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeCGMUseMinutes
          description: Minutes of CGM use
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInVeryLowMinutes
          description: Minutes below 54 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInAnyLowMinutes
          description: Minutes below 70 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInLowMinutes
          description: Minutes in range 54-70 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInTargetMinutes
          description: Minutes in range 70-180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInHighMinutes
          description: Minutes in range 180-250 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInVeryHighMinutes
          description: Minutes above 250 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInExtremeHighMinutes
          description: Minutes above 350 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInAnyHighMinutes
          description: Minutes above 180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeCGMUseRecords
          description: Records of CGM use
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInVeryLowRecords
          description: Records below 54 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInAnyLowRecords
          description: Records below 70 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInLowRecords
          description: Records in range 54-70 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInTargetRecords
          description: Records in range 70-180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInHighRecords
          description: Records in range 180-250 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInVeryHighRecords
          description: Records above 250 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInAnyHighRecords
          description: Records above 180 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.averageDailyRecords
          description: Average records per day
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.totalRecords
          description: Total records in period
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.hoursWithData
          description: Total hours with data in period
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.daysWithData
          description: Total days with data in period
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.standardDeviation
          description: Standard deviation of glucose values in Mmol/L
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.coefficientOfVariation
          description: Coefficient Of Variation of glucose values in Mmol/L
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.averageGlucoseMmol
          description: Average glucose value of records in Mmol/L
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInVeryLowPercent
          description: Percentage of time [0.0-1.0]  below 54 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInAnyLowPercent
          description: Percentage of time [0.0-1.0]  below 70 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInLowPercent
          description: Percentage of time [0.0-1.0]  in range 54-70 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInTargetPercent
          description: Percentage of time [0.0-1.0]  in range 70-180 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInHighPercent
          description: Percentage of time [0.0-1.0]  in range 180-250 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInVeryHighPercent
          description: Percentage of time [0.0-1.0]  above 250 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInExtremeHighPercent
          description: Percentage of time [0.0-1.0]  above 350 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInAnyHighPercent
          description: Percentage of time [0.0-1.0]  above 180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInVeryLowRecords
          description: Records below 54 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInAnyLowRecords
          description: Records below 70 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInLowRecords
          description: Records in range 54-70 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInTargetRecords
          description: Records in range 70-180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInHighRecords
          description: Records in range 180-250 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInVeryHighRecords
          description: Records above 250 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInAnyHighRecords
          description: Records above 180 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.averageDailyRecords
          description: Average records per day
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.totalRecords
          description: Total records in period

        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.averageGlucoseMmolDelta
          description: Delta of average glucose value in Mmol/L
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.glucoseManagementIndicatorDelta
          description: Glucose management Indicator of records
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeCGMUsePercentDelta
          description: Delta of time of CGM use
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInVeryLowPercentDelta
          description: Delta of time below 54 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInAnyLowPercentDelta
          description: Delta of time below 70 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInLowPercentDelta
          description: Delta of time in range 54-70 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInTargetPercentDelta
          description: Delta of time in range 70-180 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInHighPercentDelta
          description: Delta of time in range 180-250 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInVeryHighPercentDelta
          description: Delta of time above 250 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInExtremeHighPercentDelta
          description: Delta of time above 350 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.timeInAnyHighPercentDelta
          description: Delta of time above 180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeCGMUseMinutesDelta
          description: Delta of minutes of CGM use
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInVeryLowMinutesDelta
          description: Delta of minutes below 54 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInAnyLowMinutesDelta
          description: Delta of minutes below 70 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInLowMinutesDelta
          description: Delta of minutes in range 54-70 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInTargetMinutesDelta
          description: Delta of minutes in range 70-180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInHighMinutesDelta
          description: Delta of minutes in range 180-250 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInVeryHighMinutesDelta
          description: Delta of minutes above 250 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInExtremeHighMinutesDelta
          description: Delta of minutes above 350 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInAnyHighMinutesDelta
          description: Delta of minutes above 180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeCGMUseRecordsDelta
          description: Delta of records count
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInVeryLowRecordsDelta
          description: Delta of records below 54 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInAnyLowRecordsDelta
          description: Delta of records below 70 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInLowRecordsDelta
          description: Delta of records in range 54-70 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInTargetRecordsDelta
          description: Delta of records in range 70-180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInHighRecordsDelta
          description: Delta of records in range 180-250 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInVeryHighRecordsDelta
          description: Delta of records above 250 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.timeInAnyHighRecordsDelta
          description: Delta of records above 180 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.averageDailyRecordsDelta
          description: Delta of average records per day
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.totalRecordsDelta
          description: Delta of total records
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.hoursWithDataDelta
          description: Delta of total hours with data
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: cgm.daysWithDataDelta
          description: Delta of total days with data
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.standardDeviationDelta
          description: Delta of the standard deviation of glucose values in Mmol/L
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: cgm.coefficientOfVariationDelta
          description: Delta of the coefficient of glucose values in Mmol/L
        - schema:
            type: string
            format: date-time
          in: query
          name: cgm.lastDataFrom
          description: Inclusive
        - schema:
            type: string
            format: date-time
          in: query
          name: cgm.lastDataTo
          description: Exclusive

        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.averageGlucoseMmolDelta
          description: Delta of the average glucose values in Mmol/L
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInVeryLowPercentDelta
          description: Delta of time below 54 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInAnyLowPercentDelta
          description: Delta of time below 70 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInLowPercentDelta
          description: Delta of time in range 54-70 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInTargetPercentDelta
          description: Delta of time in range 70-180 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInHighPercentDelta
          description: Delta of time in range 180-250 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInVeryHighPercentDelta
          description: Delta of time above 250 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInExtremeHighPercentDelta
          description: Delta of time above 350 mg/dL
        - schema:
            $ref: '#/components/schemas/FloatFilter'
          in: query
          name: bgm.timeInAnyHighPercentDelta
          description: Delta of time above 180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInVeryLowRecordsDelta
          description: Delta of records below 54 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInAnyLowRecordsDelta
          description: Delta of records below 70 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInLowRecordsDelta
          description: Delta of records in range 54-70 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInTargetRecordsDelta
          description: Delta of records in range 70-180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInHighRecordsDelta
          description: Delta of records in range 180-250 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInVeryHighRecordsDelta
          description: Delta of records above 250 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.timeInAnyHighRecordsDelta
          description: Delta of records above 180 mg/dL
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.averageDailyRecordsDelta
          description: Delta of average records per day
        - schema:
            $ref: '#/components/schemas/IntFilter'
          in: query
          name: bgm.totalRecordsDelta
          description: Delta of total record count
          
        - schema:
            type: string
            format: date-time
          in: query
          name: bgm.lastDataFrom
          description: Inclusive
        - schema:
            type: string
            format: date-time
          in: query
          name: bgm.lastDataTo
          description: Exclusive
        - schema:
            type: array
            items:
              type: string
              format: '^[a-f0-9]{24}$'
          in: query
          name: tags
          description: Comma-separated list of patient tag IDs
          style: form
          explode: false
      description: Retrieve a list of patients of a clinic
    post:
      summary: Create Patient Account
      operationId: CreatePatientAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Create a custodial account for a patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/patient_tags':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    post:
      summary: Create Patient Tag
      operationId: CreatePatientTag
      responses:
        '200':
          description: OK
      description: Create a new patient tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientTag'
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/clinicians/{clinicianId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/clinicianId'
    get:
      summary: Get Clinician
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      operationId: GetClinician
      description: Retrieve a member of clinic given their user id
    put:
      summary: Update Clinician
      operationId: UpdateClinician
      responses:
        '200':
          description: OK
      description: Update existing clinician
      tags:
        - Clinics
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./clinic/models/clinician.v1.yaml
    delete:
      summary: Delete Clinician
      operationId: DeleteClinician
      responses:
        '200':
          description: OK
      description: Removes a clinician from a clinic
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/patients/{patientId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientId'
    get:
      summary: Get Patient
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      operationId: GetPatient
      description: Retrieve a patient of clinic given their user id
    post:
      summary: Create Patient from Existing User
      operationId: CreatePatientFromUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Internal endpoint for creating a patient from an existing user
      tags:
        - Clinics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatient'
    put:
      summary: Update Patient
      operationId: UpdatePatient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Update existing patient of a clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      tags:
        - Clinics
    delete:
      summary: Delete Patient
      operationId: DeletePatient
      responses:
        '204':
          description: No Content
      description: Deletes patient from a clinic. Requires the request to be made by a clinic admin or the currently authenticated user id to match the patient id.
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/patient_tags/{patientTagId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientTagId'
    put:
      summary: Update Patient Tag
      operationId: UpdatePatientTag
      responses:
        '200':
          description: OK
      description: Update existing patient tag
      tags:
        - Clinics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientTag'
    delete:
      summary: Delete Patient Tag
      operationId: DeletePatientTag
      responses:
        '200':
          description: OK
      description: Removes a patient tag from a clinic and tagged patients
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/invites/clinicians':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    post:
      summary: Invite Clinician
      operationId: InviteClinician
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./clinic/models/clinician.v1.yaml
      description: Send an invite to clinician's email address to join a clinic.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteClinician'
      tags:
        - Clinics
        - Confirmations
  '/v1/clinics/{clinicId}/invites/clinicians/{inviteId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/inviteId'
    patch:
      summary: Resend Clinician Invite
      operationId: ResendInvite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./confirm/models/confirmation.v1.yaml
      description: Resend invite to the email address of the clinician.
      tags:
        - Clinics
        - Confirmations
    delete:
      summary: Delete Invite
      operationId: DeleteInvite
      responses:
        '200':
          description: OK
      description: Deletes unaccepted invite
      tags:
        - Clinics
        - Confirmations
    get:
      summary: Get Clinician Invite
      operationId: GetClinicianInvite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./confirm/models/confirmation.v1.yaml
      description: Retrieve an invitation sent to clinician to join the clinic
      tags:
        - Confirmations
  '/v1/clinics/{clinicId}/invites/clinicians/{inviteId}/clinician':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/inviteId'
    patch:
      summary: Associate Clinician to User
      operationId: AssociateClinicianToUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      description: Internal endpoint to associate a clinician to a user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateClinicianToUser'
      tags:
        - Clinics
    delete:
      summary: Delete Invited Clinician
      operationId: DeleteInvitedClinician
      responses:
        '200':
          description: OK
      description: Internal endpoint to delete an invited clinician object
      tags:
        - Clinics
    get:
      summary: Get Invited Clinician
      operationId: GetInvitedClinician
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      description: Internal endpoint to retrieve invited clinician.
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/invites/patients':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      summary: Get Patient Invites
      tags:
        - Clinics
        - Confirmations
      responses:
        '200':
          description: OK
      operationId: GetPatientInvites
      description: Retrieve the list of all pending invites from users who would like to share their accounts with the clinic and become patients.
  '/v1/clinics/{clinicId}/invites/patients/{inviteId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/inviteId'
    put:
      summary: Accept Patient Invitation
      operationId: AcceptPatientInvitation
      responses:
        '200':
          description: OK
      description: Accept a pending invite from a user who would like to share their account with the clinic and become a patient.
      tags:
        - Clinics
        - Confirmations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptPatientInvitation'
  '/v1/clinics/{clinicId}/patients/{patientId}/reviews':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientId'
    put:
      summary: Update Patient Reviews
      operationId: UpdatePatientReviews
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientReviews'
      description: |-
        Update the patient's last reviewed date and clinician ID
      tags:
        - Clinics
    delete:
      summary: Delete Patient Reviews
      operationId: DeletePatientReviews
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientReviews'
        '409':
          description: Cannot revert a different clinician's review
        '404':
          description: No review to delete
      description: |-
        Revert the patient's last reviewed date to the previous set
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/patients/{patientId}/permissions':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientId'
    put:
      summary: Update Patient Permissions
      operationId: UpdatePatientPermissions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientReviews'
      description: |-
        Update permissions that a clinic has over a patient account. If all permissions are revoked as a result of the update, the patient profile will be removed from the clinic.

        Only patients can change the permissions.
      tags:
        - Clinics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientPermissions'
      parameters: []
  '/v1/clinics/{clinicId}/patients/{patientId}/permissions/{permission}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientId'
      - schema:
          type: string
          enum:
            - custodian
            - view
            - upload
            - note
        name: permission
        in: path
        required: true
    delete:
      summary: Delete Patient Permission
      operationId: DeletePatientPermission
      description: |-
        Remove a single permission that a clinic has over a patient account. If all permissions are revoked as a result of the update, the patient profile will be removed from the clinic.

        Only patients can change the permissions.
      tags:
        - Clinics
      parameters: []
      responses:
        '204':
          description: No Content
  '/v1/patients/{userId}/clinics':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: List Clinics for Patient
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientClinicRelationships'
      operationId: ListClinicsForPatient
      description: Get all clinics a user is a patient of
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
  '/v1/clinicians/{userId}/invites':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: List Clinician Invites
      tags:
        - Clinics
        - Confirmations
      responses:
        '200':
          description: OK
      operationId: ListClinicianInvites
      description: Retrieve a list of the outstanding invites to join a clinic
  '/v1/clinicians/{userId}/invites/{inviteId}':
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/inviteId'
    delete:
      summary: Dismiss Clinician Invite
      operationId: DismissClinicianInvite
      responses:
        '200':
          description: OK
      tags:
        - Clinics
        - Confirmations
      description: Dismisses an invite sent from a clinic to clinician
    put:
      summary: Accept Clinician Invite
      operationId: AcceptClinicianInvite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      description: Accept an invite to join a clinic as clinician. The clinician will be associated to the currently authenticated user if the email in their profile matches the email of the invite.
      tags:
        - Clinics
        - Confirmations
  '/v1/clinicians/{userId}/clinics':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: List Clinics for Clinician
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClinicianClinicRelationships'
      operationId: ListClinicsForClinician
      description: Returns a list of all clinics a clinician is a member of
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
  '/v1/clinics/{clinicId}/migrations':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    post:
      summary: Migrate Legacy Clinician Patients
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
      operationId: MigrateLegacyClinicianPatients
      tags:
        - Clinics
        - Internal
      description: 'Migrate the patients of a legacy clinic account. '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Migration'
    get:
      summary: Retrieve Migration Status
      operationId: ListMigrations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migrations'
      description: ListMigrations
      tags:
        - Clinics
        - Internal
  '/v1/clinicians/{userId}/migrate':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    post:
      summary: Enable Clinics
      tags:
        - Clinics
        - Internal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./clinic/models/clinic.v1.yaml
      operationId: EnableNewClinicExperience
      description: Internal only endpoint to enable new clinic experience for a legacy clinician account. Patients won't be migrated until the clinic details are populated and migration is explicitly kicked-off by blip.
  '/v1/clinics/{clinicId}/migrate':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    post:
      summary: Trigger initial migration
      tags:
        - Clinics
        - Internal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
      operationId: TriggerInitialMigration
      description: Trigger the initial migration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerMigration'
  '/v1/clinics/{clinicId}/migrations/{userId}':
    parameters:
      - $ref: ./clinic/parameters/clinicid.v1.yaml
      - $ref: '#/components/parameters/userId'
    get:
      summary: Get Migration
      tags:
        - Clinics
        - Internal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
      operationId: GetMigration
      description: Get a migration by user id
    patch:
      summary: Update Migration
      operationId: UpdateMigration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationUpdate'
      description: Internal endpoint to update the status of a migration
      tags:
        - Clinics
        - Internal
  '/v1/users/{userId}/clinics':
    parameters:
      - $ref: '#/components/parameters/userId'
    delete:
      summary: Remove User from Clinics
      operationId: DeleteUserFromClinics
      responses:
        '200':
          description: OK
      tags:
        - Clinics
        - Internal
      description: |-
        Internal endpoint that deletes any user associations with clinics they are a patient or a member of.

        If the user is a patient of a clinic the service will delete the patient-clinic relationship.

        If the user is one of many admins of any clinic the service will delete the clinician-clinic relationship.

        If the user is the only admin of a clinic the service will:
        - delete the clinician record, leaving the clinic without an admin
        - delete all non-custodial patient relationships of the clinic
        - keep all custodian relationships, allowing users to claim custodial accounts with an email
        - keep all custodian accounts and data even if they can’t be claimed when there isn’t an email address associated with the account
    post:
      summary: Update User Details
      operationId: UpdateClinicUserDetails
      responses:
        '204':
          description: No Content
      description: Internal endpoint to update clinician details. In the future it may be extended to support patient updates.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDetails'
      tags:
        - Clinics
        - Internal
  /v1/clinicians:
    get:
      summary: List All Clinicians
      tags:
        - Clinics
        - Internal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClinicianClinicRelationship'
      operationId: ListAllClinicians
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/createdTimeStart'
        - $ref: '#/components/parameters/createdTimeEnd'
      description: Returns list of all clinician/clinic relationships in the system. Internal endpoint used for reporting purposes.
  '/v1/patients/{patientId}/summary':
    parameters:
      - $ref: '#/components/parameters/patientId'
    post:
      summary: UpdatePatientSummary
      operationId: UpdatePatientSummary
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      description: Internal endpoint which updates the summary in all patient records which match the user id.
      tags:
        - Clinics
        - Internal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientSummary'
        description: ''
  '/v1/patients/{userId}/data_sources':
    parameters:
      - $ref: '#/components/parameters/userId'
    put:
      summary: Create or update a data source for a patient
      operationId: UpdatePatientDataSources
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      description: Internal endpoint to upsert patient data source provider details in all their associated clinic records.
      tags:
        - Clinics
        - Internal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSources'
  '/v1/clinics/{clinicId}/tier':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    post:
      summary: Update Tier
      operationId: UpdateTier
      responses:
        '200':
          description: OK
      description: Internal endpoint to update clinic service tier
      tags:
        - Clinics
        - Internal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTier'
  '/v1/clinics/{clinicId}/suppressed_notifications':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    post:
      summary: Update Suppressed Notifications
      operationId: UpdateSuppressedNotifications
      responses:
        '200':
          description: OK
      description: Endpoint to update clinic suppressed notifications
      tags:
        - Clinics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSuppressedNotifications'
  '/v1/clinics/{clinicId}/patients/{patientId}/upload_reminder':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientId'
    post:
      summary: Send Upload Reminder
      operationId: SendUploadReminder
      responses:
        '200':
          description: OK
      description: Sends upload reminder to the patient
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/patients/{patientId}/send_dexcom_connect_request':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientId'
    post:
      summary: Resend Dexcom connect request email
      operationId: SendDexcomConnectRequest
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Resend Dexcom connect request to the email address of the patient
      tags:
        - Clinics
  '/v1/clinics/{clinicId}/patients/assign_tag/{patientTagId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientTagId'
    post:
      summary: Assign Patient Tag To Clinic Patients
      operationId: AssignPatientTagToClinicPatients
      requestBody:
        description: Array of clinic patient user IDs to target for tag assignment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TidepoolUserIds'
      responses:
        '200':
          description: OK
      description: Assign a patient tag to a subset of clinic patients
      tags:
        - Clinics
        - Internal
  '/v1/clinics/{clinicId}/patients/delete_tag/{patientTagId}':
    parameters:
      - $ref: '#/components/parameters/clinicId'
      - $ref: '#/components/parameters/patientTagId'
    post:
      summary: Delete Patient Tag From Clinic Patients
      operationId: DeletePatientTagFromClinicPatients
      requestBody:
        description: Pass an array of patient IDs to target a subset of the clinic patients. Omit request body to target all clinic patients.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TidepoolUserIds'
      responses:
        '200':
          description: OK
      description: Delete a patient tag from all or a subset of clinic patients
      tags:
        - Clinics
        - Internal
  '/v1/clinics/{clinicId}/membership_restrictions':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      summary: List Membership Restrictions
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipRestrictions'
      operationId: ListMembershipRestrictions
      description: |-
        Returns a list of the membership restrictions that will be evaluated when a user joins a clinic.

        Only clinic admins can access this endpoint.
    put:
      summary: Update Membership Restrictions
      operationId: UpdateMembershipRestrictions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipRestrictions'
      description: An internal endpoint to update clinic membership restrictions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipRestrictions'
      x-internal: true
      tags:
        - Clinics
        - Internal
  /v1/redox:
    post:
      summary: Redox EHR Endpoint
      operationId: ProcessEHRMessage
      responses:
        '200':
          description: OK
      tags:
        - Internal
        - Redox
        - Clinics
      description: An endpoint for incoming Redox messages
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      x-internal: true
  /v1/redox/verify:
    post:
      summary: Redox Verify Endpoint
      operationId: VerifyEndpoint
      responses:
        '200':
          description: OK
      tags:
        - Internal
        - Redox
        - Clinics
      x-internal: true
      description: Internal endpoint for Redox challenge verification
  '/v1/clinics/{clinicId}/settings/ehr':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      summary: Get EHR Settings
      tags:
        - Clinics
        - Internal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EHRSettings'
      operationId: GetEHRSettings
      description: Returns EHR related settings
      x-internal: true
    put:
      summary: Update EHR Settings
      operationId: UpdateEHRSettings
      responses:
        '200':
          description: OK
      description: Update EHR related settings for a clinic
      tags:
        - Clinics
        - Internal
      x-internal: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EHRSettings'
  /v1/redox/match:
    post:
      summary: Match Clinic and Patient
      operationId: MatchClinicAndPatient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EHRMatchResponse'
        '404':
          description: Not Found
      tags:
        - Clinics
        - Internal
      description: |
        An internal endpoint used for matching an EHR request (e.g. NewOrder) to a clinic and patient.

        If a clinic with the provided details cannot be found, the service will return `404 Not Found` and will not attempt to match patients to the provided details.

        Due to lack of uniqueness constraints on the MRN and DOB fields it's possible that multiple patient records match the provided attributes. All results will be returned in the response and it's the calling services responsiblity to determine how to handle duplicates records.

        If a unique match is found, the patient matching criteria will be added to the patient record for future use (e.g. pushing data on a schedule).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EHRMatchRequest'
      x-internal: true
  '/v1/clinics/{clinicId}/settings/mrn':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      summary: Get MRN Settings
      tags:
        - Clinics
        - Internal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MRNSettings'
      operationId: GetMRNSettings
      x-internal: true
      description: Retrieve MRN settings
    put:
      summary: Update MRN Settings
      operationId: UpdateMRNSettings
      responses:
        '200':
          description: OK
      tags:
        - Clinics
        - Internal
      description: Update MRN Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MRNSettings'
  '/v1/clinics/{clinicId}/settings/patient_count':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      operationId: GetPatientCountSettings
      summary: Get Patient Count Settings
      description: Get Patient Count settings
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientCountSettings'
      x-internal: true
    put:
      operationId: UpdatePatientCountSettings
      summary: Update Patient Count Settings
      description: Update Patient Count Settings
      tags:
        - Clinics
        - Internal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientCountSettings'
      responses:
        '200':
          description: OK
  '/v1/clinics/{clinicId}/patient_count':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    get:
      operationId: GetPatientCount
      summary: Get Patient Count
      description: Get Patient Count
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientCount'
  '/v1/clinics/{clinicId}/ehr/sync':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    post:
      summary: Sync EHR Data
      operationId: SyncEHRData
      responses:
        '202':
          description: Accepted
      description: |-
        An internal endpoint which will push the latest patient summary statistics and PDF reports for all patients who have an active subscription. The actual data is pushed asynchronously. A successful response means that an asynchronous task has been scheduled for each patient of the clinic with an active subscription.

        Will return 404 Not Found if the clinic does not have an active EHR connection.
      tags:
        - Clinics
        - Internal
      x-internal: true
      parameters: []
  /v1/patients:
    get:
      summary: Find Patients
      tags:
        - Clinics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientClinicRelationships'
      operationId: FindPatients
      description: Returns all patients to which the clinician has access to
      parameters:
        - schema:
            type: string
          in: query
          name: mrn
        - schema:
            type: string
          in: query
          name: birthDate
        - schema:
            type: string
          in: query
          name: workspaceId
          description: The identifier of the workspace
        - schema:
            type: string
            enum:
              - clinicId
              - ehrSourceId
          in: query
          name: workspaceIdType
          description: The type of the workspace identifier
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
  /v1/xealth/preorder:
    parameters: []
    post:
      summary: Preorder Form Webhook
      operationId: XealthPreorder
      responses:
        '200':
          description: OK
      tags:
        - Clinics
        - Internal
      x-internal: true
      description: |-
        The Preorder endpoint can be invoked when a care provider attempts to place an order manually within the EHR. Subscribers can use Preorder Forms to present additional information to, or receive input from, a care provider before an order can be placed. Preorder Forms can also be implemented so as to prevent an order from being placed entirely.

        https://sandbox.xealth.io/app/api-docs#tag/Digital-Care/paths/preorder/post
  /v1/xealth/programs:
    put:
      summary: Get Programs
      operationId: XealthGetPrograms
      responses:
        '200':
          description: OK
      tags:
        - Clinics
        - Internal
      x-internal: true
  /v1/xealth/program:
    put:
      summary: Get Program Url
      operationId: XealthGetProgramUrl
      responses:
        '200':
          description: OK
      description: ''
      tags:
        - Clinics
        - Internal
      x-internal: true
  /v1/xealth/notification:
    post:
      summary: Notification Webhook
      operationId: XealthNotification
      responses:
        '200':
          description: OK
      description: ''
      tags:
        - Clinics
        - Internal
      x-internal: true
  /v1/xealth/report/web/viewer.html:
    get:
      summary: View PDF Report
      tags:
        - Clinics
        - Internal
      responses:
        '200':
          description: OK
      operationId: ViewPDFReport
      description: View PDF report for a given patient of a clinic
      parameters:
        - schema:
            type: string
          in: query
          name: clinicId
          required: true
        - schema:
            type: string
          in: query
          name: patientId
          required: true
        - schema:
            type: string
          in: query
          name: restricted_token
          required: true
      x-internal: true
    parameters: []
  '/v1/clinics/{clinicId}/service_accounts':
    parameters:
      - $ref: '#/components/parameters/clinicId'
    post:
      summary: Add Service Account
      operationId: AddServiceAccount
      responses:
        '200':
          description: OK
      description: Adds authentication client's service account as a new clinician member.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddServiceAccount'
      tags:
        - Clinics
        - Internal
      x-internal: true
  '/v1/patients/{patientId}/ehr/sync':
    parameters:
      - $ref: '#/components/parameters/patientId'
    post:
      summary: Sync EHR Data for Patient
      operationId: SyncEHRDataForPatient
      responses:
        '202':
          description: Accepted
      description: |-
        An internal endpoint which will push the latest patient summary statistics and PDF reports to all EHR enabled clinics for which the patient has an active subscription. The actual data is pushed asynchronously. A successful response means that an asynchronous task has been scheduled.

        A 404 response will be returned if no active subscriptions can be found for given patient.
      tags:
        - Clinics
        - Internal
      x-internal: true
components:
  schemas:
    Error:
      $ref: ./common/models/error.v1.yaml
    Clinic:
      $ref: ./clinic/models/clinic.v1.yaml
    Clinics:
      type: array
      items:
        $ref: '#/components/schemas/Clinic'
    Clinician:
      $ref: ./clinic/models/clinician.v1.yaml
    Clinicians:
      type: array
      items:
        $ref: '#/components/schemas/Clinician'
    Patient:
      $ref: ./clinic/models/patient.v1.yaml
    Patients:
      type: array
      items:
        $ref: ./clinic/models/patient.v1.yaml
    PatientTag:
      $ref: ./clinic/models/patienttag.v1.yaml
    PatientTags:
      type: array
      items:
        $ref: '#/components/schemas/PatientTag'
    DateTime:
      $ref: ./common/models/datetime.v1.yaml
    DataSource:
      $ref: ./clinic/models/datasource.v1.yaml
    DataSources:
      type: array
      items:
        $ref: '#/components/schemas/DataSource'
    InviteClinician:
      $ref: ./clinic/models/inviteclinician.v1.yaml
    TidepoolUserId:
      $ref: ./common/models/tidepooluserid.yaml
    TidepoolUserIds:
      type: array
      nullable: true
      description: Array of Tidepool User IDs
      items:
        $ref: '#/components/schemas/TidepoolUserId'
      minItems: 1
      maxItems: 1000
      uniqueItems: true
    ClinicianRoles:
      $ref: ./clinic/models/clinicianroles.v1.yaml
    PhoneNumber:
      $ref: ./clinic/models/phonenumber.v1.yaml
    PatientPermissions:
      $ref: ./clinic/models/patientpermissions.v1.yaml
    Id:
      $ref: ./clinic/models/clinicid.v1.yaml
    PatientClinicRelationship:
      title: PatientClinicRelationship
      type: object
      properties:
        patient:
          $ref: '#/components/schemas/Patient'
        clinic:
          $ref: '#/components/schemas/Clinic'
      required:
        - patient
        - clinic
    PatientClinicRelationships:
      title: PatientClinicRelationships
      type: array
      items:
        $ref: '#/components/schemas/PatientClinicRelationship'
    CreatePatient:
      title: Create Patient
      type: object
      properties:
        permissions:
          $ref: ./clinic/models/patientpermissions.v1.yaml
        isMigrated:
          type: boolean
        legacyClinicianId:
          $ref: '#/components/schemas/TidepoolUserId'
        attestationSubmitted:
          type: boolean
        fullName:
          type: string
          description: The full name of the patient
          minLength: 1
        birthDate:
          type: string
          format: date
          example: '2012-08-30'
        mrn:
          type: string
          description: The medical record number of the patient
          minLength: 1
        tags:
          $ref: '#/components/schemas/PatientTagIds'
    AssociateClinicianToUser:
      title: Associate Clinician
      type: object
      properties:
        userId:
          type: string
      required:
        - userId
    ClinicianClinicRelationship:
      title: ClinicianClinicRelationship
      type: object
      properties:
        clinician:
          $ref: '#/components/schemas/Clinician'
        clinic:
          $ref: '#/components/schemas/Clinic'
      required:
        - clinician
        - clinic
    ClinicianClinicRelationships:
      title: ClinicianClinicRelationships
      type: array
      items:
        $ref: '#/components/schemas/ClinicianClinicRelationship'
    Migration:
      title: Migration
      type: object
      properties:
        userId:
          type: string
          description: The user id of the legacy clinician account that needs to be migrated.
          minLength: 1
        status:
          $ref: ./clinic/models/migrationstatus.v1.yaml
        createdTime:
          type: string
          format: date-time
          readOnly: true
        updatedTime:
          type: string
          format: date-time
          readOnly: true
        attestationTime:
          type: string
          format: date-time
          readOnly: true
      required:
        - userId
        - createdTime
        - updatedTime
    Migrations:
      title: Migrations
      type: array
      items:
        $ref: '#/components/schemas/Migration'
    MigrationUpdate:
      title: MigrationUpdate
      type: object
      properties:
        status:
          $ref: ./clinic/models/migrationstatus.v1.yaml
      required:
        - status
    MigrationStatus:
      $ref: ./clinic/models/migrationstatus.v1.yaml
    Meta:
      title: Meta
      type: object
      properties:
        count:
          type: integer
    PatientsResponse:
      title: PatientsResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Patients'
        meta:
          $ref: '#/components/schemas/Meta'
    Tide:
      $ref: ./clinic/models/tide.v1.yaml
    TideResponse:
      $ref: '#/components/schemas/Tide'
    UpdateUserDetails:
      title: UpdateUserDetails
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
    TriggerMigration:
      title: TriggerMigration
      type: object
      properties:
        attestationSubmitted:
          type: boolean
    PatientTagIds:
      $ref: ./clinic/models/patienttagids.v1.yaml
    TideConfig:
      $ref: ./clinic/models/tide/config.v1.yaml
    TideFilters:
      $ref: ./clinic/models/tide/filters.v1.yaml
    TidePatient:
      $ref: ./clinic/models/tide/patient.v1.yaml
    TideResultPatient:
      $ref: ./clinic/models/tide/resultpatient.v1.yaml
    TideResults:
      $ref: ./clinic/models/tide/results.v1.yaml
    PatientBGMPeriod:
      $ref: ./summary/models/bgm/bgmperiod.v1.yaml
    PatientBGMPeriods:
      $ref: ./summary/models/bgm/bgmperiods.v1.yaml
    PatientBGMStats:
      $ref: ./clinic/models/summaries/bgmstats.v1.yaml
    PatientCGMPeriod:
      $ref: ./summary/models/cgm/cgmperiod.v1.yaml
    PatientCGMPeriods:
      $ref: ./summary/models/cgm/cgmperiods.v1.yaml
    PatientCGMStats:
      $ref: ./clinic/models/summaries/cgmstats.v1.yaml
    PatientSummaryConfig:
      $ref: ./summary/models/config.v1.yaml
    PatientSummaryDates:
      $ref: ./summary/models/dates.v1.yaml
    PatientSummary:
      $ref: ./clinic/models/summaries/patientsummary.v1.yaml
    PatientReview:
      $ref: "./clinic/models/patientreview.v1.yaml"
    PatientReviews:
      type: array
      items:
        $ref: "#/components/schemas/PatientReview"
    FloatFilter:
      type: string
      pattern: ^(>=|>|<=|<)[+-]?((\d+(\.\d*)?)|(\.\d+))$
      example: '>=5.5'
    IntFilter:
      type: string
      pattern: ^(>=|>|<=|<)[+-]?\d+$
      example: '>=7'
    UpdateTier:
      title: UpdateTier
      type: object
      properties:
        tier:
          $ref: '#/components/schemas/Tier'
      required:
        - tier
    Tier:
      $ref: ./clinic/models/tier.v1.yaml
    UpdateSuppressedNotifications:
      title: UpdateSuppressedNotifications
      type: object
      properties:
        suppressedNotifications:
          $ref: '#/components/schemas/SuppressedNotifications'
      required:
        - suppressedNotifications
    SuppressedNotifications:
      $ref: ./clinic/models/suppressedNotifications.v1.yaml
    MembershipRestriction:
      $ref: ./clinic/models/membershiprestriction.v1.yaml
    MembershipRestrictions:
      $ref: ./clinic/models/membershiprestrictions.v1.yaml
    EHRSettings:
      $ref: ./clinic/models/ehrsettings.v1.yaml
    EHRFacility:
      $ref: ./clinic/models/ehrfacility.v1.yaml
    EHRMatchRequest:
      title: EHR Match Request
      x-stoplight:
        id: nq0mlm5dqdfw0
      type: object
      x-examples: {}
      properties:
        messageRef:
          $ref: '#/components/schemas/EHRMatchMessageRef'
    EHRMatchResponse:
      title: EHRMatchResponse
      x-stoplight:
        id: pekkj09rlany0
      type: object
      properties:
        clinic:
          $ref: '#/components/schemas/Clinic'
        patients:
          $ref: '#/components/schemas/Patients'
        settings:
          $ref: '#/components/schemas/EHRSettings'
      required:
        - clinic
        - settings
    MRNSettings:
      $ref: ./clinic/models/mrnsettings.v1.yaml
    PatientCount:
      $ref: ./clinic/models/patientcount.v1.yaml
    PatientCountLimit:
      $ref: ./clinic/models/patientcountlimit.v1.yaml
    PatientCountSettings:
      $ref: ./clinic/models/patientcountsettings.v1.yaml
    EHRDestinationIds:
      $ref: ./clinic/models/ehrdestinations.v1.yaml
    EHRProcedureCodes:
      $ref: ./clinic/models/ehrprocedures.v1.yaml
    EHRMatchMessageRef:
      title: EHRMatchMessageRef
      x-stoplight:
        id: a1215t5vip3tr
      type: object
      properties:
        dataModel:
          type: string
          enum:
            - Order
        eventType:
          type: string
          enum:
            - New
        documentId:
          type: string
      required:
        - dataModel
        - eventType
        - documentId
    AcceptPatientInvitation:
      title: AcceptPatientInvitation
      x-stoplight:
        id: vo0jck92hztsj
      type: object
      properties:
        fullName:
          type: string
          description: The full name of the patient
          minLength: 1
        birthDate:
          type: string
          format: date
          example: '2012-08-30'
        mrn:
          type: string
          description: The medical record number of the patient
          minLength: 1
        tags:
          $ref: '#/components/schemas/PatientTagIds'
    AddServiceAccount:
      title: AddServiceAccount
      x-stoplight:
        id: 3c7ko800mld31
      type: object
      properties:
        name:
          type: string
          x-stoplight:
            id: 3333gszyq3x79
          minLength: 1
        client_id:
          type: string
          x-stoplight:
            id: kgfyaapmfjies
          minLength: 1
        client_secret:
          type: string
          x-stoplight:
            id: 8jdosn0tlbqp5
          minLength: 1
      required:
        - name
        - client_id
        - client_secret
    ScheduledReports:
      $ref: ./clinic/models/scheduledreports.v1.yaml
  securitySchemes:
    sessionToken:
      name: x-tidepool-session-token
      type: apiKey
      in: header
      description: A Tidepool session token
  parameters:
    offset:
      name: offset
      in: query
      schema:
        type: integer
        minimum: 0
    limit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        default: 10
    clinicId:
      name: clinicId
      in: path
      required: true
      schema:
        type: string
        pattern: '^[a-f0-9]{24}$'
    clinicianId:
      name: clinicianId
      in: path
      required: true
      schema:
        type: string
        pattern: '^([0-9a-f]{10}|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$'
    patientId:
      name: patientId
      in: path
      required: true
      schema:
        type: string
        pattern: '^([0-9a-f]{10}|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$'
    patientTagId:
      name: patientTagId
      in: path
      required: true
      schema:
        type: string
        pattern: '^[a-f0-9]{24}$'
    userId:
      name: userId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/TidepoolUserId'
    inviteId:
      name: inviteId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
    shareCode:
      name: shareCode
      in: query
      required: false
      schema:
        type: string
    search:
      name: search
      in: query
      required: false
      schema:
        type: string
      description: Full text search query
    email:
      name: email
      in: query
      required: false
      schema:
        type: string
        format: email
    role:
      name: role
      in: query
      required: false
      schema:
        type: string
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
        pattern: '(?:-|\+)(?:[a-zA-Z]|_)+'
      description: Sort order and attribute (e.g. +name or -name)
    createdTimeStart:
      name: createdTimeStart
      in: query
      required: false
      schema:
        type: string
        format: date-time
      description: Return records created after the given date (inclusive)
    createdTimeEnd:
      name: createdTimeEnd
      in: query
      required: false
      schema:
        type: string
        format: date-time
      description: Return records created before the given date (exclusive)
    ehrEnabled:
      name: ehrEnabled
      in: query
      required: false
      schema:
        type: boolean
      description: Retrieve clinics with enabled EHR integration
tags:
  - name: Clinics
    description: 'Manage clinics, clinians and patients.'
  - name: Confirmations
    description: 'Manage confirmations for account creation, sharing invites, etc.'
  - name: Internal
    description: APIs intended for internal use by Tidepool.
  - name: Redox
    description: Public endpoints invoked by Redox.
security:
  - sessionToken: []
