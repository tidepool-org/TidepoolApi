openapi: 3.0.0
info:
  title: Authorization API
  version: '1.0'
  description: |-
    The Tidepool API is an HTTP REST API used by Tidepool clients use to communicate with the Tidepool Platform.

    For more information, see the [Getting Started](../docs/quick-start.md) section.
  termsOfService: https://developer.tidepool.org/terms-of-use
  contact:
    name: API Support
    url: https://support.tidepool.org/
    email: support@tidepool.org
  license:
    name: BSD-2-Clause
    url: https://github.com/tidepool-org/gatekeeper/blob/develop/LICENSE
  x-tidepool-service: https://github.com/tidepool-org/gatekeeper

servers:
  - url: 'https://external.integration.tidepool.org'
    description: integration
  - url: 'https://api.tidepool.org'
    description: production
  - url: 'https://dev1.dev.tidepool.org'
    description: dev1
  - url: 'https://qa1.development.tidepool.org'
    description: qa1
  - url: 'https://qa2.development.tidepool.org'
    description: qa2

security:
  - sessionToken: []

tags:
  - name: Internal
    description: >-
      APIs intended for internal use by Tidepool.
  - name: Authorization
    description: >-
      List, create and manage authorizations that grant access to another user's diabetes data.

paths:
  '/access/groups/{userId}':
    parameters:
      - $ref: './common/parameters/tidepooluserid.yaml'
    get:
      operationId: GetGroupsForUser
      summary: Get Groups for User
      description: >-
        Retrieve all groups accessible to the user `userId`.
      responses:
        '200':
          $ref: '#/components/responses/GroupPermissions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      tags:
        - Authorization

  '/access/{sharerId}':
    parameters:
      - $ref: './common/parameters/tidepoolsharerid.v1.yaml'
    get:
      operationId: GetUsersInGroup
      summary: Get Users in Group
      description: >-
        Retrieve all users that have access to group `sharerId`.
      responses:
        '200':
          $ref: '#/components/responses/GroupPermissions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      tags:
        - Authorization

  '/access/{sharerId}/{userId}':
    parameters:
      - $ref: './common/parameters/tidepoolsharerid.v1.yaml'
      - $ref: './common/parameters/tidepooluserid.yaml'
    get:
      operationId: GetPermissionsForUser
      summary: Get User Permissions in Group
      description: >-
        Retrieve permissions of individual user `userId` in group `sharerId`.
      responses:
        '200':
          $ref: '#/components/responses/UserPermissions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      tags:
        - Authorization

    post:
      operationId: GrantPermissionsInGroup
      summary: Update Permissions for User in Group
      description: >-
        Update permissions of individual user `userId` in group `sharerId`.
        The permissions provided in the request body replace all existing permissions for that user.
        Therefore to delete a permission, submit the request body without that permission.
      requestBody:
        content:
          'application/json':
            schema:
              $ref: './access/models/modifyuserpermissions.v1.yaml'
      responses:
        '200':
          $ref: '#/components/responses/UserPermissions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      tags:
        - Authorization

components:
  securitySchemes:
    sessionToken:
      $ref: './common/security/tidepoolsessiontoken.v1.yaml'

  responses:
    UserPermissions:
      description: 'Access permissions of a user'
      content:
        'application/json':
          schema:
            $ref: './access/models/userpermissions.v1.yaml'

    GroupPermissions:
      description: 'Access permissions of one or more users within a group'
      content:
        'application/json':
          schema:
            $ref: './access/models/grouppermissions.v1.yaml'

    BadRequest:
      description: 'Bad Request'

    Unauthorized:
      description: 'Unauthorized'

    Forbidden:
      description: 'Forbidden'

    NotFound:
      description: 'Not Found'

    ServerError:
      description: 'Server Error'
