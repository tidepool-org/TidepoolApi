openapi: 3.0.0
info:
  title: Metrics API
  version: '1.0'
  description: |-
    The Tidepool API is an HTTP REST API used by Tidepool clients use to communicate with the Tidepool Platform.

    For more information, see the [Getting Started](../docs/quick-start.md) section.
  contact:
    name: API Support
    url: https://support.tidepool.org/
    email: support@tidepool.org
  license:
    name: BSD-2-Clause
    url: https://github.com/tidepool-org/highwater/master/LICENSE
  x-tidepool-service: https://github.com/tidepool-org/highwater

servers:
  - url: 'https://external.integration.tidepool.org'
    description: integration
  - url: 'https://api.tidepool.org'
    description: production
  - url: 'https://dev1.dev.tidepool.org'
    description: dev1
  - url: 'https://qa1.development.tidepool.org'
    description: qa1
  - url: 'https://qa2.development.tidepool.org'
    description: qa2

tags:
  - name: Internal
    description: >-
      APIs intended for internal use by Tidepool.
  - name: Metrics
    description: |-
      Record metrics events.

      These metrics APIs are intended for use by Tidepool products to capture free-form metrics events.
      The APIs have no request body, nor do they return any meaningful responses.
      There are very few constraints or validation of the input parameters.
      Any number of additional query parameters can be included in the API requests, and they are recorded along with the metrics event.
      It is OK to send them asynchronously in a fire-and-forget manner.

paths:
  '/metrics/user/{userId}/{eventName}':
    parameters:
      - $ref: './common/parameters/tidepooluserid.yaml'
      - $ref: './metrics/parameters/eventname.v1.yaml'
    get:
      summary: Record Metrics Event for User
      description: >-
        Records a new metrics event for the user identified by the `userId` parameter.
        This API does not require a session token, but if one is provided it must be a valid token.
        The `userId` parameter is not validated.
        Any query parameters supplied with the request will be recorded as part of the event.
      responses:
        '200':
          description: >-
            Success
      operationId: RecordMetricsEventForNamedUser
      tags:
        - Metrics

  '/metrics/thisuser/{eventName}':
    parameters:
      - $ref: './metrics/parameters/eventname.v1.yaml'
    get:
      summary: Record Metrics Event for Logged-In User
      description: >-
        Records a new metrics event for the user identified by the session token.
        This API requires a session token, and it must be a valid user token.
        The `userId` parameter is extracted from the session token.
        Any query parameters supplied with the request will be recorded as part of the event.
      responses:
        '200':
          description: >-
            Success
        '401':
          description: >-
            Unauthorized
      operationId: RecordMetricsEventForLoggedInUser
      security:
        - sessionToken: []
      tags:
        - Metrics

  '/metrics/server/{serverName}/{eventName}':
    parameters:
      - $ref: './metrics/parameters/servername.v1.yaml'
      - $ref: './metrics/parameters/eventname.v1.yaml'
    get:
      summary: Record Metrics Event for Server
      description: >-
        Records a new metrics event on behalf of a server.
        This API requires a session token, and it must be a valid server token.
        Any query parameters supplied with the request will be recorded as part of the event.
      responses:
        '200':
          description: >-
            Success
        '401':
          description: >-
            Unauthorized
      operationId: RecordMetricsEventForServer
      security:
        - sessionToken: []
      tags:
        - Metrics
        - Internal

components:
  securitySchemes:
    sessionToken:
      $ref: './common/security/tidepoolsessiontoken.v1.yaml'
