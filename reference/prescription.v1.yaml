openapi: 3.0.0
info:
  title: Prescriptions API
  version: '1.0'
  description: Prescription service for Tidepool Loop
  contact:
    url: 'https://support.tidepool.org/'
    name: API Support
    email: support@tidepool.org
  termsOfService: 'https://developer.tidepool.org/terms-of-use/'
  license:
    name: BSD 2-Clause "Simplified" License

servers:
  - url: 'https://external.integration.tidepool.org'
    description: integration
  - url: 'https://api.tidepool.org'
    description: production
  - url: 'https://dev1.dev.tidepool.org'
    description: dev1
  - url: 'https://qa1.development.tidepool.org'
    description: qa1
  - url: 'https://qa2.development.tidepool.org'
    description: qa2

tags:
  - name: Internal
    description: >-
      APIs intended for internal use by Tidepool.
  - name: Prescriptions
    description: >-
      Manage prescriptions for Tidepool Loop

paths:
  '/v1/clinics/{clinicId}/prescriptions':
    get:
      summary: List Prescriptions
      tags:
        - Prescriptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./prescription/models/prescription.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
      operationId: ListClinicPrescriptions
      description: Retrieve the list of prescriptions created by clinic members
      parameters:
        - schema:
            type: string
          in: query
          name: id
        - schema:
            type: string
          in: query
          name: patientUserId
        - schema:
            type: string
            format: email
          in: query
          name: patientEmail
        - schema:
            type: string
          in: query
          name: state
        - schema:
            type: string
            format: date-time
          in: query
          name: createdAfter
          description: inclusive
        - schema:
            type: string
            format: date-time
          in: query
          name: createdBefore
          description: exclusive
        - schema:
            type: string
            format: date-time
          in: query
          name: modifiedAfter
          description: inclusive
        - schema:
            type: string
            format: date-time
          in: query
          name: modifiedBefore
          description: exclusive
    post:
      summary: Create a Prescription
      operationId: CreatePrescription
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./prescription/models/prescription.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
      description: Create a new prescription
      tags:
        - Prescriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./prescription/models/writableattributes.v1.yaml
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
  '/v1/clinics/{clinicId}/prescriptions/{prescriptionId}':
    parameters:
      - schema:
          type: string
        name: prescriptionId
        in: path
        required: true
        description: ''
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    get:
      summary: Get Prescription
      tags:
        - Prescriptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./prescription/models/prescription.v1.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
      operationId: GetPrescriptionById
      description: Retrieve a prescription by id
    delete:
      summary: Delete Prescription
      operationId: DeletePrescription
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
      description: >-
        Clinician only endpoint to delete a prescription. Works only when the prescription has status `draft`.
      tags:
        - Prescriptions
  '/v1/clinics/{clinicId}/prescriptions/{prescriptionId}/revisions':
    parameters:
      - schema:
          type: string
        name: prescriptionId
        in: path
        required: true
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    post:
      summary: Create new revision
      operationId: CreatePrescriptionRevision
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./prescription/models/revision.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
      description: Add a new revision to a prescription which is still a draft.
      tags:
        - Prescriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./prescription/models/writableattributes.v1.yaml
        description: ''
  '/v1/patients/{userId}/prescriptions':
    post:
      summary: Claim Prescription
      operationId: ClaimPrescription
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./prescription/models/prescription.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./platform/models/errorresponse.v1.yaml
      tags:
        - Prescriptions
      description: Claim a submitted prescription using an access code and date of birth.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./prescription/models/claim.req.v1.yaml
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: List Prescriptions for Patient
      operationId: ListPatientPrescriptions
      responses:
        '200':
          description: OK
      description: Retrieve a list of prescription that the user has claimed
      tags:
        - Prescriptions
  '/v1/patients/{userId}/prescriptions/{prescriptionId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: prescriptionId
        in: path
        required: true
    get:
      summary: Get Prescription for User
      tags:
        - Prescriptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./prescription/models/prescription.v1.yaml
      operationId: GetPrescriptionForUser
      description: Retrieve a prescription by id
    patch:
      summary: Update Prescription State
      operationId: UpdatePrescriptionState
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./prescription/models/prescription.v1.yaml
      description: Update prescription state
      tags:
        - Prescriptions
components:
  schemas: {}
  securitySchemes: {}
  parameters: {}
